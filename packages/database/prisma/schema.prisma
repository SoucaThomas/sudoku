generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Room {
  roomId         String  @id @default(auto()) @map("_id") @db.ObjectId
  roomName       String
  roomPassword   String?
  roomGame       String
  roomDifficulty String
  isRoomPublic   Boolean

  roomHostId String
  roomUsers  Json[]

  isPlaying       Boolean
  totalPlayTime   Int
  lastTimeStarted DateTime

  status String

  boardId String? @unique @db.ObjectId
}

model Board {
  boardId String @id @default(auto()) @map("_id") @db.ObjectId

  serverBoard String
  clientBoard String
  solution    String
  mistakes    Int
  score       Int

  roomId String @unique @db.ObjectId
}

model User {
  id            String    @id @map("_id")
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  isAnonymous   Boolean?  @default(false)
  gamesPlayed   Int?    @default(0)
  totalScore    Int?    @default(0)
  level         Int?    @default(1)
  experiance    Int?    @default(0)
  color         String? @default("blue")
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
